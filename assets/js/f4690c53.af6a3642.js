(self.webpackChunkdart_code_metrics_website=self.webpackChunkdart_code_metrics_website||[]).push([[4058],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return d},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},d=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),s=c(r),m=a,f=s["".concat(u,".").concat(m)]||s[m]||p[m]||o;return r?n.createElement(f,l(l({ref:t},d),{},{components:r})):n.createElement(f,l({ref:t},d))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=s;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},3797:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return d},default:function(){return s}});var n=r(2122),a=r(9756),o=(r(7294),r(3905)),l=["components"],i={},u="Double literal format",c={unversionedId:"rules/common/double-literal-format",id:"rules/common/double-literal-format",isDocsHomePage:!1,title:"Double literal format",description:"Has auto-fix",source:"@site/docs/rules/common/double-literal-format.md",sourceDirName:"rules/common",slug:"/rules/common/double-literal-format",permalink:"/docs/rules/common/double-literal-format",editUrl:"https://github.com/dart-code-checker/website/blob/main/docs/rules/common/double-literal-format.md",version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Binary expression operand order",permalink:"/docs/rules/common/binary-expression-operand-order"},next:{title:"Member ordering extended",permalink:"/docs/rules/common/member-ordering-extended"}},d=[{value:"Rule id",id:"rule-id",children:[]},{value:"Description",id:"description",children:[{value:"Redundant leading &#39;0&#39;",id:"redundant-leading-0",children:[]},{value:"Literal begin with &#39;.&#39;",id:"literal-begin-with-",children:[]},{value:"Redundant trailing &#39;0&#39;",id:"redundant-trailing-0",children:[]}]}],p={toc:d};function s(e){var t=e.components,r=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"double-literal-format"},"Double literal format"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://img.shields.io/badge/-has%20auto--fix-success",alt:"Has auto-fix"})),(0,o.kt)("h2",{id:"rule-id"},"Rule id"),(0,o.kt)("p",null,"double-literal-format"),(0,o.kt)("h2",{id:"description"},"Description"),(0,o.kt)("p",null,"Checks that double literals should begin with ",(0,o.kt)("inlineCode",{parentName:"p"},"0.")," instead of just ",(0,o.kt)("inlineCode",{parentName:"p"},"."),", and should not end with a trailing ",(0,o.kt)("inlineCode",{parentName:"p"},"0"),". Helps keep a consistent style of numeric literals and decrease potential typos."),(0,o.kt)("h3",{id:"redundant-leading-0"},"Redundant leading '0'"),(0,o.kt)("p",null,"Bad:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"  var a = 05.23, b = 03.6e+15, c = -012.2, d = -001.1e-15;\n")),(0,o.kt)("p",null,"Good:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"  var a = 5.23, b = 3.6e+15, c = -12.2, d = -1.1e-15;\n")),(0,o.kt)("h3",{id:"literal-begin-with-"},"Literal begin with '.'"),(0,o.kt)("p",null,"Bad:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"  var a = .257, b = .16e+5, c = -.259, d = -.14e-5;\n")),(0,o.kt)("p",null,"Good:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"  var a = 0.257, b = 0.16e+5, c = -0.259, d = -0.14e-5;\n")),(0,o.kt)("h3",{id:"redundant-trailing-0"},"Redundant trailing '0'"),(0,o.kt)("p",null,"Bad:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"  var a = 0.210, b = 0.100e+5, c = -0.250, d = -0.400e-5;\n")),(0,o.kt)("p",null,"Good:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"  var a = 0.21, b = 0.1e+5, c = -0.25, d = -0.4e-5;\n")))}s.isMDXComponent=!0}}]);