(self.webpackChunkdart_code_metrics_website=self.webpackChunkdart_code_metrics_website||[]).push([[5486],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return d},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=s(n),f=a,m=p["".concat(c,".").concat(f)]||p[f]||u[f]||i;return n?r.createElement(m,l(l({ref:t},d),{},{components:n})):r.createElement(m,l({ref:t},d))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=p;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7281:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return d},default:function(){return p}});var r=n(2122),a=n(9756),i=(n(7294),n(3905)),l=["components"],o={},c="Prefer extracting callbacks",s={unversionedId:"rules/flutter/prefer-extracting-callbacks",id:"rules/flutter/prefer-extracting-callbacks",isDocsHomePage:!1,title:"Prefer extracting callbacks",description:"Configurable",source:"@site/docs/rules/flutter/prefer-extracting-callbacks.md",sourceDirName:"rules/flutter",slug:"/rules/flutter/prefer-extracting-callbacks",permalink:"/docs/rules/flutter/prefer-extracting-callbacks",editUrl:"https://github.com/dart-code-checker/website/blob/main/docs/rules/flutter/prefer-extracting-callbacks.md",version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Avoid wrapping in padding",permalink:"/docs/rules/flutter/avoid-wrapping-in-padding"},next:{title:"Prefer Intl name",permalink:"/docs/rules/intl/prefer-intl-name"}},d=[{value:"Rule id",id:"rule-id",children:[]},{value:"Description",id:"description",children:[{value:"Config example",id:"config-example",children:[]},{value:"Example",id:"example",children:[]}]}],u={toc:d};function p(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"prefer-extracting-callbacks"},"Prefer extracting callbacks"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://img.shields.io/badge/-configurable-informational",alt:"Configurable"})),(0,i.kt)("h2",{id:"rule-id"},"Rule id"),(0,i.kt)("p",null,"prefer-extracting-callbacks"),(0,i.kt)("h2",{id:"description"},"Description"),(0,i.kt)("p",null,"Warns about inline callbacks in a widget tree and suggests to extract them to widget methods in order to make a ",(0,i.kt)("inlineCode",{parentName:"p"},"build")," method more readable. In addition extracting can help test those methods separately as well."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"NOTE")," the rule will not trigger on arrow functions like ",(0,i.kt)("inlineCode",{parentName:"p"},"onPressed: () => _handler(...)")," in order to cover cases when a callback needs a variable from the outside."),(0,i.kt)("p",null,"Use ",(0,i.kt)("inlineCode",{parentName:"p"},"ignored-named-arguments")," configuration, if you want to ignore specific named parameters (",(0,i.kt)("inlineCode",{parentName:"p"},"builder")," argument is ignored by default)."),(0,i.kt)("h3",{id:"config-example"},"Config example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"dart_code_metrics:\n  ...\n  rules:\n    ...\n    - prefer-extracting-callbacks:\n        ignored-named-arguments:\n          - onPressed\n")),(0,i.kt)("h3",{id:"example"},"Example"),(0,i.kt)("p",null,"Bad:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"class MyWidget extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return TextButton(\n      style: ...,\n      onPressed: () { // LINT\n        // Some \n        // Huge\n        // Callback\n      },\n      child: ...\n    );\n  }\n}\n")),(0,i.kt)("p",null,"Good:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"class MyWidget extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return TextButton(\n      style: ...,\n      onPressed: () => handlePressed(context),\n      child: ...\n    );\n  }\n  \n  void handlePressed(BuildContext context) {\n    ...\n  }\n}\n\nclass MyWidget extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return TextButton(\n      style: ...,\n      onPressed: handlePressed,\n      child: ...\n    );\n  }\n  \n  void handlePressed() {\n    ...\n  }\n}\n")))}p.isMDXComponent=!0}}]);